// Generated by CoffeeScript 1.10.0
(function() {
  var Client, moment;

  Client = require('./client');

  moment = require('moment');

  module.exports = function(callback) {
    var client, clientEmail, metrics, month, privateKey, today, viewId, week;
    today = moment().format('YYYY-MM-DD');
    week = moment(today).subtract(1, 'week').format('YYYY-MM-DD');
    month = moment(today).subtract(1, 'month').format('YYYY-MM-DD');
    viewId = process.env.GOOGLE_ANALYTICS_VIEW_ID;
    clientEmail = process.env.GOOGLE_ANALYTICS_CLIENT_EMAIL;
    privateKey = JSON.parse(process.env.GOOGLE_ANALYTICS_PRIVATE_KEY);
    metrics = ['ga:pageviews', 'ga:sessions', 'ga:users'];
    client = new Client(clientEmail, privateKey);
    return [
      {
        name: 'weekly',
        from: week,
        to: today,
        metrics: metrics
      }, {
        name: 'monthly',
        from: month,
        to: today,
        metrics: metrics
      }
    ].reduce(function(promise, arg) {
      var from, metrics, name, to;
      name = arg.name, from = arg.from, to = arg.to, metrics = arg.metrics;
      return promise.then(function(results) {
        return client.get({
          viewId: viewId,
          from: from,
          to: to,
          metrics: metrics
        }).then(function(obj) {
          var k, v;
          ((function() {
            var results1;
            results1 = [];
            for (k in obj) {
              v = obj[k];
              results1.push([k, v]);
            }
            return results1;
          })()).forEach(function(arg1) {
            var k, v;
            k = arg1[0], v = arg1[1];
            return results['blog-' + name + '-' + k] = v;
          });
          return results;
        });
      });
    }, Promise.resolve({})).then(function(counts) {
      return callback(null, counts);
    })["catch"](function(error) {
      return callback(error);
    });
  };

}).call(this);
